#!/bin/env python
__author__ = 'tunnell'
"""Build files from processed trigger events in output database.


the output format is Pickled.
TODO: merge with other commands"""

import logging
import pickle
import os

from configglue import schema
from configglue.glue import configglue

from wax.EventBuilder.Processor import sizeof_fmt
from tqdm import tqdm
from wax import __version__, Configuration
from wax.Database import OutputDBInterface


def main(config):
    values = config.values('__main__')
    log = logging.getLogger('FileBuilder')

    log.debug("Establishing connection")

    output = OutputDBInterface.MongoDBOutput(hostname=values.get('hostname'))
    try:
        collection = output.get_collection()
    except RuntimeError:
        log.error(
            "Uninitialized (empty? if so, run 'process'.) output database; no file made.")
        return

    cursor = collection.find()
    n = cursor.count()
    if n == 0:
        log.error("No events in the output database; no file made.")
        return

    f = open(values.get('filename'), 'wb')

    pickle.dump(__version__, f)

    for i in tqdm(range(n)):
        pickle.dump(next(cursor), f)

    f.close()
    log.info("Size of file: %s " % sizeof_fmt(os.path.getsize(values.get('filename'))))




if __name__ == '__main__':
    class eb(schema.Schema, Configuration.File, Configuration.Mongo):
        pass

    # glue everything together
    glue = configglue(eb,
                      ['config.ini'])
    # run
    main(glue.schema_parser)